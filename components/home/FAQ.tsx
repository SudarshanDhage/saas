import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ChevronDown, HelpCircle } from 'lucide-react';
import { cn } from '@/lib/utils';

type FAQItem = {
  question: string;
  answer: string;
  category: 'general' | 'features' | 'pricing' | 'technical';
};

const FAQ: React.FC = () => {
  const [openIndex, setOpenIndex] = useState<number | null>(null);
  const [activeCategory, setActiveCategory] = useState<string>('all');
  
  const faqItems: FAQItem[] = [
    {
      question: "What is SprintPro and how does it work?",
      answer: "SprintPro is an AI-powered sprint planning platform that helps teams transform ideas into actionable sprint plans. It uses artificial intelligence to analyze requirements, break them down into tasks, and organize them into efficient sprint plans with accurate estimations and clear steps for implementation.",
      category: "general",
    },
    {
      question: "How does the AI create sprint plans?",
      answer: "Our AI analyzes your project requirements using natural language processing and our proprietary algorithms. It identifies key components, breaks them down into tasks, estimates complexity, assigns appropriate story points, and organizes everything into a structured sprint plan with dependencies and timelines.",
      category: "features",
    },
    {
      question: "Can I customize the AI-generated sprint plans?",
      answer: "Absolutely! While our AI provides a great starting point, you have full control to edit, adjust, or refine any part of the generated plans. You can modify tasks, adjust estimates, reorder priorities, or add custom notes to ensure the plan meets your team's specific needs.",
      category: "features",
    },
    {
      question: "Do I need coding experience to use SprintPro?",
      answer: "Not at all. SprintPro is designed for both technical and non-technical users. Project managers, product owners, and business analysts can use it without coding knowledge. Developers will appreciate the technical accuracy of the plans and prompts generated by our system.",
      category: "general",
    },
    {
      question: "What's the difference between the Free, Pro, and Enterprise plans?",
      answer: "The Free plan includes basic project management features with limited AI planning. The Pro plan adds unlimited AI-powered sprint planning, detailed step-by-step prompts, and team collaboration. Enterprise includes advanced analytics, priority support, custom integrations, and a dedicated account manager for larger organizations.",
      category: "pricing",
    },
    {
      question: "Is my data secure on the platform?",
      answer: "Yes, we take security seriously. Your data is encrypted both in transit and at rest. We follow industry best practices for data protection, use secure cloud infrastructure, and never share your proprietary information. Our privacy policy details exactly how we handle your data.",
      category: "technical",
    },
    {
      question: "Can I integrate SprintPro with other tools like Jira or GitHub?",
      answer: "Yes! The Pro plan includes integrations with popular tools like Jira, GitHub, GitLab, Trello, and more. Enterprise plans offer custom integrations for specialized tools in your workflow. Our API also allows for building custom connections to your existing systems.",
      category: "features",
    },
    {
      question: "How accurate are the AI estimations?",
      answer: "Our AI has been trained on thousands of real-world projects and continuously improves. While no estimation is perfect, our users report that AI estimations are typically within 15-20% of actual development time, which is better than most manual estimations. The system also learns from your team's velocity over time.",
      category: "technical",
    },
  ];
  
  const filteredItems = activeCategory === 'all' 
    ? faqItems 
    : faqItems.filter(item => item.category === activeCategory);
  
  const toggleQuestion = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };
  
  const categories = [
    { id: 'all', label: 'All Questions' },
    { id: 'general', label: 'General' },
    { id: 'features', label: 'Features' },
    { id: 'pricing', label: 'Pricing' },
    { id: 'technical', label: 'Technical' },
  ];

  return (
    <section className="py-16 bg-gray-50 dark:bg-gray-900 rounded-3xl my-12">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">
            Frequently Asked Questions
          </h2>
          <p className="text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
            Find answers to common questions about our platform and services
          </p>
        </div>
        
        {/* Category filters */}
        <div className="flex flex-wrap justify-center gap-2 mb-10">
          {categories.map((category) => (
            <button
              key={category.id}
              className={cn(
                "px-4 py-2 rounded-full text-sm font-medium transition-all",
                activeCategory === category.id
                  ? "bg-blue-600 text-white"
                  : "bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700"
              )}
              onClick={() => setActiveCategory(category.id)}
            >
              {category.label}
            </button>
          ))}
        </div>
        
        {/* FAQ accordion */}
        <div className="max-w-3xl mx-auto">
          {filteredItems.map((item, index) => {
            const isOpen = openIndex === index;
            const itemIndex = faqItems.indexOf(item);
            
            return (
              <motion.div
                key={itemIndex}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: itemIndex * 0.1 }}
                className={cn(
                  "mb-4 overflow-hidden border rounded-lg",
                  isOpen
                    ? "border-blue-500 bg-white dark:bg-gray-800"
                    : "border-gray-200 bg-white dark:bg-gray-800 dark:border-gray-700"
                )}
              >
                <button
                  className="flex items-center justify-between w-full p-5 text-left"
                  onClick={() => toggleQuestion(index)}
                >
                  <div className="flex items-center">
                    <HelpCircle size={20} className="mr-3 text-blue-500" />
                    <span className="font-medium">{item.question}</span>
                  </div>
                  <ChevronDown
                    className={cn(
                      "transform transition-transform duration-300",
                      isOpen ? "rotate-180" : "rotate-0"
                    )}
                  />
                </button>
                <AnimatePresence>
                  {isOpen && (
                    <motion.div
                      initial={{ height: 0, opacity: 0 }}
                      animate={{ height: "auto", opacity: 1 }}
                      exit={{ height: 0, opacity: 0 }}
                      transition={{ duration: 0.3 }}
                    >
                      <div className="px-5 pb-5 pt-0 text-gray-600 dark:text-gray-400">
                        {item.answer}
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </motion.div>
            );
          })}
        </div>
        
        {/* Additional help */}
        <div className="text-center mt-10">
          <p className="text-gray-600 dark:text-gray-400 mb-4">
            Didn't find what you're looking for?
          </p>
          <button className="inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 bg-blue-600 dark:bg-blue-700 text-white hover:bg-blue-700 dark:hover:bg-blue-600 h-10 px-4 py-2">
            Contact Support
          </button>
        </div>
      </div>
    </section>
  );
};

export default FAQ; 